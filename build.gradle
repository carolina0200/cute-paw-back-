plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.3"
	id "org.owasp.dependencycheck" version "6.5.3"
}

sonarqube {
	properties {
		property "sonar.projectKey", "carolina0200_my-cash-back"
		property "sonar.organization", "carolina0200"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

group = 'com.caro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude module: 'spring-boot-starter-tomcat'
	}
	implementation 'org.springframework.boot:spring-boot-starter-undertow'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.postgresql:postgresql:42.3.2'

	implementation 'io.jsonwebtoken:jjwt:0.7.0'
	implementation 'com.auth0:java-jwt:3.19.1'
	implementation 'commons-codec:commons-codec:1.15'

	implementation "org.springdoc:springdoc-openapi-ui:1.6.8"
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
	additionalSourceDirs files("aplicacion/src/main/java")
	additionalClassDirs files("aplicacion/build/classes/java/main")
}
